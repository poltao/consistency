syntax = "proto3";
package raft;

service Raft {
    rpc Elect (ElectRequest) returns (ElectResponse) {}
    rpc AppendLog (AppendLogRequest) returns (AppendLogResponse) {}
}

message ElectResponse {
    bool granted = 1;
}

message ElectRequest {
    uint32 id = 1;

    uint64 term = 2;

    LogId last_log_id = 3;
}

message AppendLogRequest {
    uint32 id = 1;

    uint64 term = 2;

    LogId last_log_id = 3;

    LogId prev_log_id = 4;

    repeated Log log = 5;

    uint64 leader_commit = 6;
}

message AppendLogResponse {
    bool success = 1;
    // 返回查找到的leader和follower相同日志的索引
    LogId conflict_index = 2;
}

/// base message

message LogId {
    uint64 term = 1;
    uint64 index = 2;
}

message Log {
    LogId id = 1;
    string data = 2;
    // 用于集群成员配置变更时
    repeated string configs = 3;
}